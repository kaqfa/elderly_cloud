[preparation]
useradd -m -s /bin/bash elder
usermod -a -G sudo elder
passwd elder
su - elder

sudo apt-get install postgresql postgresql-contrib
sudo apt-get install libpq-dev python-dev
sudo pip install psycopg2
sudo apt-get install gunicorn


[nginx configuration]

``` /etc/nginx/sites-available/devel-server.conf
server {
    listen 80;
    server_name devel.inovasiku.biz;
    
    location /static {
        alias /home/elder/prod/staticfiles;
    }

    location / {
        proxy_pass http://localhost:8000;
    }
}
```
sudo ln -s ../sites-available/devel-server.conf /etc/nginx/sites-enabled/devel-server.conf


[bash start]
``` ../prod-server
#!/bin/bash

NAME="development_server"             # Name of the application
DJANGODIR=/home/elder/prod            # Django project directory
USER=elder                            # the user to run as
NUM_WORKERS=3                         # how many worker processes should Gunicorn spawn
DJANGO_SETTINGS_MODULE=elderly_cloud.settings    # which settings file should Django use
DJANGO_WSGI_MODULE=elderly_cloud.wsgi            # WSGI module name

echo "Starting $NAME as `whoami`"

# Activate the virtual environment
cd $DJANGODIR

exec gunicorn ${DJANGO_WSGI_MODULE}:application \
  --name $NAME \
  --workers $NUM_WORKERS \
  --user=$USER \
  --bind=localhost:8000 \
  --log-level=debug \
  --log-file=-
```

sudo chmod u+x ../prod-server
pip install setproctitle


[autorun with supervisor]

sudo apt-get install supervisor

``` /etc/supervisor/conf.d/devel-server.conf
[program:development-server]
command = /home/elder/prod-server                   ; Command to start app
user = elder                                                    ; User to run as
stdout_logfile = /home/elder/logs/gunicorn_supervisor.log ; Where to write log messages
redirect_stderr = true                                          ; Save stderr in the same log
environment=LANG=en_US.UTF-8,LC_ALL=en_US.UTF-8                 ; Set UTF-8 as default encoding
```

sudo supervisorctl reread
sudo supervisorctl update
sudo supervisorctl status devel-server
sudo supervisorctl restart devel-server